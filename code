rm(list=ls())
library(shiny)
library(plotly)
library(DMwR)
library(shinydashboard)
library(leaflet.minicharts)
library(leaflet)
library(dplyr)
library(readr)
library(reshape)
library(lubridate)
setwd("/Users/luxinyi/Google 云端硬盘/harvard")
fname <- dir("economy")

Australia_economy <- read_csv("^AXJO Australia.csv")
India_economy <- read_csv("^BSESN India.csv")
UK_economy <- read_csv("^BUK100P UK.csv")
Brazil_economy <- read_csv("^BVSP Brazil.csv")
USA_economy<- read_csv("^DJI USA.csv")
France_economy<- read_csv("^FCHI France.csv")
German_economy<- read_csv("^GDAXI German.csv")
Indonesia_economy <- read_csv("^JKSE Indonesia.csv")
Argentina_economy <- read_csv("^MERV Argentina.csv")
Mexico_economy <- read_csv("^MXX Mexico .csv")
Japan_economy <- read_csv("^N225 Japan.csv")
China_economy <- read_csv("000001 china.SS.csv")
Belgium_economy <- read_csv("^BFX Belgium.csv")
confirm_case <- read_csv("confirmed.csv")%>%as.data.frame()
covid <- read_csv("owid-covid-data.csv")%>%select(location,date,total_cases,new_cases,total_deaths,new_deaths,new_deaths_per_million)

country_list <- c("Australia","India","United Kingdom","Brazil","Belgium", "United States","France","Germany","Indonesia","Argentina","Mexico","Japan","China")
covid <- covid%>%filter(location%in%country_list)
confirm_case <- melt(confirm_case,id=c("Country/Region","Lat","Long"))%>%dplyr::group_by(`Country/Region`)%>%dplyr::summarise(Lat=mean(Lat,na.rm = TRUE),Lon=mean(Long,na.rm=TRUE))%>%as.data.frame()
covid <- left_join(covid,confirm_case,by=c("location"="Country/Region"))








ui <- dashboardPage(skin = "yellow",
                    dashboardHeader(title = "COVID-19 Worldwide Data and Index of Economy",titleWidth = 600),
                    
                    dashboardSidebar(
            
                      selectInput("country", h4("Country"), choices =country_list, selected = "China"),
                      
                      
                      dateInput("date",label = "Date",value = "2020-06-26"),
                      
        
                      
                      sidebarMenu(
                        menuItem('Show Data'),
                        menuSubItem('COVID-19 Data',tabName = 'covid',icon = icon("virus")),     
                        menuSubItem('Economy Data',tabName = 'econ',icon = icon("chart-line")),       
                        menuSubItem('Both',tabName = 'both',icon = icon("search-dollar")) 
                      )
                    ),
                    
                    dashboardBody(
                      leafletOutput(outputId = "map"),
                      tabItems(
                        tabItem(tabName = 'covid',
                                fluidRow(
                                  tabBox(title = "COVID-19 Data",height = "300px", width = 12, 
                                         tabPanel("Confirmed", plotlyOutput("covid19plot1")),    
                                         tabPanel("Deaths", plotlyOutput("covid19plot2")))       
                        )),
                        tabItem(tabName = 'econ',                                             
                                fluidRow(
                                  plotlyOutput("economyplot") 

                                )),
                        tabItem(tabName = 'both', fluidRow(
                          tabBox(title = "Both data",height = "300px", width = 12,
                          tabPanel("Confirmed", plotlyOutput("economyplot1")),    
                          tabPanel("Deaths", plotlyOutput("economyplot2")))
                          
                        ))
                      ),

                    ))


server <- function(input,output){
  

  
  candlestick1 <- function(dataget,k){
   P <-  dataget %>% filter(Date<=k)%>%as.data.frame()
     q <-  plot_ly(x = P$Date, type="candlestick",
              open = P$Open, close = P$Close,
              high = P$High, low = P$Low,name="candlestick")
   return(q)
  }
  
  plot2 <- function(dataget,k){
    dataget_total <- covid%>%filter(location==input$country)%>%filter(date<=k)%>%select(date,total_cases)
    dataget2 <- dataget %>% filter(Date<=k)%>%select(Date,`Adj Close`)
    data_t <- inner_join(dataget_total,dataget2,by=c("date"="Date"))
    plot_ly(data_t)%>%add_lines(x=~total_cases,y=~`Adj Close`)
  }
  plot3 <- function(dataget,k){
    dataget_total <- covid%>%filter(location==input$country)%>%filter(date<=k)%>%select(date,total_deaths)
    dataget2 <- dataget %>% filter(Date<=k)%>%select(Date,`Adj Close`)
    data_t <- inner_join(dataget_total,dataget2,by=c("date"="Date"))
    plot_ly(data_t)%>%add_lines(x=~total_deaths,y=~`Adj Close`)
  }
  
  
  
  #plot diagrams
  output$covid19plot1 <- renderPlotly({
    dataget <- covid%>%filter(location==input$country)%>%filter(date<=input$date)
    plot_ly(data=dataget)%>%add_lines(x = dataget$date, y = dataget$total_cases, name = input$country)
      
    })
  
  output$covid19plot2 <- renderPlotly({
    dataget <- covid%>%filter(location==input$country)%>%filter(date<=input$date)
    plot_ly(data=dataget)%>%add_lines(x = dataget$date, y = dataget$total_deaths, name = input$country)
  })
  
  
  output$economyplot <- renderPlotly({

    
    if(input$country=="India"){
      candlestick1(India_economy,input$date)
    } else if(input$country=="United States"){
      candlestick1(USA_economy,input$date)
    } else if(input$country=="United Kingdom"){
      candlestick1(UK_economy,input$date)
    } else if(input$country=="China"){
      candlestick1(China_economy,input$date)
    } else if(input$country=="Mexico"){
      candlestick1(Mexico_economy,input$date)
    } else if(input$country=="France"){
      candlestick1(France_economy,input$date)
    } else if(input$country=="Japan"){
      candlestick1(Japan_economy,input$date)
    } else if(input$country=="Australia"){
      candlestick1(Australia_economy,input$date)
    } else if(input$country=="Brazil"){
      candlestick1(Brazil_economy,input$date)
    } else if(input$country=="Belgium"){
      candlestick1(Belgium_economy,input$date)
    } else if(input$country=="Argentina"){
      candlestick1(Argentina_economy,input$date)
    } else {
      candlestick1(Indonesia_economy,input$date)
    }

  })
  
  output$map <- renderLeaflet({

    dataget <- covid%>%filter(date==input$date)
    
    leaflet(dataget) %>% 
      addTiles() %>%  
      addLayersControl(
        position = "bottomright",
        overlayGroups = c("2019-COVID"),
        options = layersControlOptions(collapsed = FALSE))   %>%
      addProviderTiles(providers$CartoDB.Positron) %>%
      clearShapes() %>%
      addCircles( lat = dataget$Lat, lng = dataget$Lon, weight = 1, radius = (dataget$total_cases)^(1/3)*2.5e4, 
                 fillOpacity = 0.1, color = "red", group = "2019-COVID (new)",
                 label =  paste0("Country: ",dataget$location,",New confirm: ",dataget$new_cases,",New death: ",dataget$new_deaths,",Death Rate: ",dataget$new_deaths_per_million),
                 labelOptions = labelOptions(
                   style = list("font-weight" = "normal", padding = "3px 8px", "color" = "blue"),
                   textsize = "15px", direction = "auto")) 
    
    })
  
  
  output$economyplot1 <- renderPlotly({
    
    
    if(input$country=="India"){
      plot2(India_economy,input$date)
    } else if(input$country=="United States"){
      plot2(USA_economy,input$date)
    } else if(input$country=="United Kingdom"){
      plot2(UK_economy,input$date)
    } else if(input$country=="China"){
      plot2(China_economy,input$date)
    } else if(input$country=="Mexico"){
      plot2(Mexico_economy,input$date)
    } else if(input$country=="France"){
      plot2(France_economy,input$date)
    } else if(input$country=="Japan"){
      plot2(Japan_economy,input$date)
    } else if(input$country=="Australia"){
      plot2(Australia_economy,input$date)
    } else if(input$country=="Brazil"){
      plot2(Brazil_economy,input$date)
    } else if(input$country=="Germany"){
      plot2(Germany_economy,input$date)
    } else if(input$country=="Belgium"){
      plot2(Belgium_economy,input$date)
    } else if(input$country=="Argentina"){
      plot2(Argentina_economy,input$date)
    } else {
      plot2(Indonesia_economy,input$date)
    }
    
  })
  output$economyplot2 <- renderPlotly({
    
    
    if(input$country=="India"){
      plot3(India_economy,input$date)
    } else if(input$country=="United States"){
      plot3(USA_economy,input$date)
    } else if(input$country=="United Kingdom"){
      plot3(UK_economy,input$date)
    } else if(input$country=="China"){
      plot3(China_economy,input$date)
    } else if(input$country=="Mexico"){
      plot3(Mexico_economy,input$date)
    } else if(input$country=="France"){
      plot3(France_economy,input$date)
    } else if(input$country=="Japan"){
      plot3(Japan_economy,input$date)
    } else if(input$country=="Australia"){
      plot3(Australia_economy,input$date)
    } else if(input$country=="Brazil"){
      plot3(Brazil_economy,input$date)
    } else if(input$country=="Germany"){
      plot3(Germany_economy,input$date)
    } else if(input$country=="Belgium"){
      plot3(Belgium_economy,input$date)
    } else if(input$country=="Argentina"){
      plot3(Argentina_economy,input$date)
    } else {
      plot3(Indonesia_economy,input$date)
    }
    
  })
  
  
}

shinyApp(ui = ui, server = server)

